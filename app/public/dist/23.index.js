(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[23],{

/***/ "./js/dialog-stationsinfo.js":
/*!***********************************!*\
  !*** ./js/dialog-stationsinfo.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__,__webpack_require__(/*! api */ \"./js/api.js\"),__webpack_require__(/*! context */ \"./js/context_model.js\"),__webpack_require__(/*! table */ \"./libs/jquery.dataTables.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(require,API,context){\r\n    var view = null,\r\n        stationId,\r\n        config = {\r\n            default:{\r\n                extobj : {\r\n                    data:null,\r\n                    listPlugin:[],\r\n                    el:$('#stationinfoTpl-dialog'),\r\n                    initialize:function(data){\r\n                        var _this = this;\r\n                        _this.listenTo(Backbone.Events,\"stationinfo:update\",function(data){\r\n                            _this.data = data.list;\r\n                            _this.render();\r\n                        });\r\n                    },\r\n                    jumpToRealTime:function(){\r\n                        window.location.href=\"#/manage/station/\"+stationId.substr(0,10);\r\n                    },\r\n                    refresh:function(){\r\n                        var _this = this,\r\n                            _param = _this.getParam();\r\n\r\n                        if(_param){\r\n                            _this.fetchData(_param);\r\n                        }else{//TODO:获取参数失败\r\n\r\n                        }\r\n                    },\r\n                    getParam:function(){\r\n                        var curstation = context.getCurStations(),\r\n                            listType = context.getListType();\r\n                        console.log('listType', listType);\r\n                        return {\r\n                            listType:listType\r\n                        };\r\n                    },\r\n                    render:function(){\r\n                        var _this = this,\r\n                            $dialog = $(\"#stationinfoTpl-dialog\").length?$(\"#stationinfoTpl-dialog\").replaceWith($($(\"#stationinfoTpl\").html())):$($(\"#stationinfoTpl\").html());\r\n                        $dialog.dialog({\r\n                            modal:true,\r\n                            show:300,\r\n                            height:270,\r\n                            width:900,\r\n                            title:\"站信息\",\r\n                            close:function(evt,ui){\r\n                                $(this).dialog( \"destroy\" );\r\n                                _this.table.destroy();\r\n                            },\r\n                            open:function(){\r\n                                _this.table =  $('#stationinfoTpl-dialog table').DataTable( {\r\n                                    \"data\": _this.data,\r\n                                    \"paging\": false,\r\n                                    \"searching\": false,\r\n                                    \"info\":false,\r\n                                    \"retrieve\":true,\r\n                                    \"scrollX\":true,\r\n                                    \"scrollY\":true,\r\n                                    \"columns\": [\r\n                                        { \"data\": \"site_name\" },\r\n                                        { \"data\": \"sid\" },\r\n                                        { \"data\": \"site_location\" },\r\n                                        { \"data\": \"fix_phone\" },\r\n                                        { \"data\": \"functionary\" },\r\n                                        { \"data\": \"functionary_phone\" },\r\n                                        { \"data\": \"emergency_person\" },\r\n                                        { \"data\": \"emergency_phone\" },\r\n                                        { \"data\": \"ups_vender\" },\r\n                                        { \"data\": \"ups_service_phone\" },\r\n                                        { \"data\": \"bms_service_contact\" },\r\n                                        { \"data\": \"bms_phone\" }\r\n                                    ]\r\n                                });\r\n                                $('#stationinfoTpl-dialog .dataTables_scrollBody').height(100)\r\n\r\n\r\n                                $(\"#stationinfoTpl-dialog\").off(\"click\").on(\"click\",\".submit-btn\",function(){\r\n                                    $dialog.dialog( \"destroy\" );\r\n                                     _this.table.destroy();\r\n                                    $(\".ui-dialog,.ui-widget-overlay\").remove();\r\n                                    _this.jumpToRealTime();\r\n\r\n                                })\r\n\r\n                                $(\"#stationinfoTpl-dialog\").off(\"click\").on(\"click\",\".goto-detail\",function(){\r\n                                    $dialog.dialog( \"destroy\" );\r\n                                    _this.table.destroy();\r\n                                    $(\".ui-dialog,.ui-widget-overlay\").remove();\r\n                                    window.location.href=\"#/qurey/baseinfo/queryStationSituation\";\r\n\r\n                                })\r\n\r\n\r\n                            }\r\n                        });\r\n\r\n                        return this;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    return {\r\n        init:function(){\r\n            view = new (Backbone.View.extend(config.default.extobj))();\r\n            return this;\r\n        },\r\n        show:function(id){\r\n            console.log('station id', id);\r\n            stationId = id;\r\n            API.getStationInfo({id:id});\r\n        }\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./libs/jquery.min.js */ \"./libs/jquery.min.js\")))\n\n//# sourceURL=webpack:///./js/dialog-stationsinfo.js?");

/***/ }),

/***/ "./js/map.js":
/*!*******************!*\
  !*** ./js/map.js ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__,__webpack_require__(/*! backbone */ \"./libs/backbone-min.js\"),__webpack_require__(/*! api */ \"./js/api.js\"),__webpack_require__(/*! stationsinfoDialog */ \"./js/dialog-stationsinfo.js\"),__webpack_require__(/*! common */ \"./js/common.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(require,Backbone,API,stationInfoDialog,common){\r\n    var MARK = {\r\n            w:27,\r\n            h:38,\r\n            icon:{\r\n                \"0\":\"images/1.png\",\r\n                \"1\":\"images/2.png\",\r\n                \"2\":\"images/3.png\",\r\n                \"3\":\"images/4.png\"\r\n            },\r\n            label:{\r\n                normal:{\r\n                    color:\"#000000\",\r\n                    fontWeight:\"bold\",\r\n                    fontSize:\"14px\",\r\n                    backgroundColor:\"#fff5cd\",\r\n                    border:\"1px solid #ffcc69\"\r\n                },\r\n                caution:{\r\n                    color:\"#000000\",\r\n                    fontWeight:\"bold\",\r\n                    fontSize:\"14px\",\r\n                    backgroundColor:\"#ffd9d9\",\r\n                    border:\"1px solid #be1616\"\r\n                },\r\n                notice:{\r\n                    color:\"#000000\",\r\n                    fontWeight:\"bold\",\r\n                    fontSize:\"14px\",\r\n                    backgroundColor:\"#ffd9d9\",\r\n                    border:\"1px solid #be1616\"\r\n                }\r\n            }\r\n        },\r\n        DEFAULT_CENTER_POINT = {x:104.603639,y:35.140578,zoom:5};\r\n    var widgetMap =  Backbone.View.extend({\r\n        options:{},\r\n        initialize: function(options) {\r\n            var _this = this;\r\n\r\n            $.extend(_this.options,options||{});\r\n\r\n            _this.listenTo(Backbone.Events,\"realtime:mapdata\",function(data){\r\n                _this.data = data.list;\r\n                _this.addMarks();\r\n                _this.buildCityList();\r\n            })\r\n            _this.listenTo(Backbone.Events,\"mapdata:update\",function(data){\r\n                _this.data = data.list;\r\n                //console.log('map data update', data);\r\n                _this.addMarks();\r\n                _this.buildCityList();\r\n                _this.centerAndZoom({\r\n                    x: DEFAULT_CENTER_POINT.x,\r\n                    y: DEFAULT_CENTER_POINT.y,\r\n                    zoom:DEFAULT_CENTER_POINT.zoom\r\n                })\r\n            })\r\n            _this.listenTo(Backbone.Events,\"mapdata:update:fail\",function(data){\r\n                _this.centerAndZoom({\r\n                    x: DEFAULT_CENTER_POINT.x,\r\n                    y: DEFAULT_CENTER_POINT.y,\r\n                    zoom:DEFAULT_CENTER_POINT.zoom\r\n                })\r\n                $(\".mapbtn\").html('<select><option>全国</option></select>');\r\n            })\r\n\r\n            _this.listenTo(Backbone.Events,\"linknum:get\",function(data){\r\n                $(\"#linkingNum\").html(data.online)\r\n                $(\"#unlinkNum\").html(data.offline)\r\n            });\r\n\r\n            _this._initBDMapCallBack();\r\n            _this._loadBDMap();\r\n        },\r\n        render:function(){\r\n            var _this = this,\r\n                _options = _this.options;\r\n            this.map = new BMap.Map(\"map\");\r\n            this.map.enableScrollWheelZoom(true);\r\n\r\n            //_this.centerAndZoom(_options.center||DEFAULT_CENTER_POINT);\r\n            //城市列表\r\n            if(_options.cityList){\r\n                _this.addCityList()\r\n            }\r\n        },\r\n        unload: function(){\r\n            this.map = null;\r\n        },\r\n        addMarks:function(){\r\n            var _this = this,\r\n                _data = _this.data,\r\n                _map = _this.map,\r\n                _alarmNum = 0;\r\n            if(_data && _data.length){\r\n\r\n                $.each(_data,function(i,d){\r\n                    var pt = new BMap.Point(d[\"site_longitude\"], d[\"site_latitude\"]);\r\n                    var icon = new BMap.Icon(MARK.icon[d.status||'0'], new BMap.Size(MARK.w,MARK.h));\r\n                    var marker = new BMap.Marker(pt,{icon:icon});  // 创建标注\r\n                    var namelength = d.site_name.replace(/[^\\x00-\\xff]/g, \"aa\").length.toString();\r\n                    var label = new BMap.Label(d.site_name,{offset:new BMap.Size(-(namelength*6)/2+8,40)});//文字标注\r\n                    label.setStyle(MARK.label[d.status||'0']);\r\n\r\n                    if(parseInt(d.status||'0')>0){\r\n                        _alarmNum++;\r\n                    }\r\n\r\n                    marker.addEventListener(\"click\", function(_d){\r\n                        return function(){\r\n                            stationInfoDialog.show(_d.serial_number);\r\n                        }\r\n                    }(d));\r\n\r\n                    label.addEventListener(\"click\", function(_d){\r\n                        return function(){\r\n                            stationInfoDialog.show(_d.serial_number);\r\n                        }\r\n                    }(d));\r\n\r\n                    marker.setLabel(label);\r\n                    _this.map.addOverlay(marker);\r\n\r\n                    _map[d.id] = $.extend(true,d,{\r\n                        icon:icon,\r\n                        marker:marker\r\n                    })\r\n                })\r\n            }\r\n            $(\".baojing .bg\").html(_alarmNum);\r\n        },\r\n        centerAndZoom:function(center){\r\n            var point = new BMap.Point(center.x, center.y);  // 创建点坐标\r\n            this.map.centerAndZoom(point, center.zoom);\r\n        },\r\n        buildCityList:function(){\r\n            var _this = this,\r\n                data = this.data,\r\n                myGeo = new BMap.Geocoder(),\r\n                adds = [],\r\n                selectHtml = '<select><option>全国</option>',\r\n                count = 0,\r\n                dataLen = data.length;\r\n            $.each(data,function(i,d){\r\n                var pt = new BMap.Point(d[\"site_longitude\"],d[\"site_latitude\"]);\r\n                myGeo.getLocation(pt, function(rs){\r\n                    var addComp = rs.addressComponents;\r\n\r\n                    if(!common.inArray(addComp.city,adds)){\r\n                        adds.push(addComp.city);\r\n                        var currentCity = localStorage.getItem('currentCity') || '全国';\r\n                        if(currentCity == addComp.city){\r\n                            selectHtml += '<option selected>'+addComp.city+'</option>';\r\n                        }else{\r\n                            selectHtml += '<option>'+addComp.city+'</option>';\r\n                        }\r\n\r\n                    }\r\n                    count++;\r\n                    if(count == dataLen){\r\n                        selectHtml+='</select>';\r\n                        $(\".mapbtn\").html(selectHtml);\r\n                        $(\".mapbtn select\").off(\"change\").on(\"change\",function(){\r\n                            var prov = $(\".mapbtn select option:selected\").html();\r\n                            localStorage.setItem(\"currentCity\", prov);\r\n                            if(\"全国\" == prov){\r\n                                _this.centerAndZoom({\r\n                                    x: DEFAULT_CENTER_POINT.x,\r\n                                    y: DEFAULT_CENTER_POINT.y,\r\n                                    zoom:DEFAULT_CENTER_POINT.zoom\r\n                                })\r\n\r\n                            }else{\r\n                                myGeo.getPoint(prov, function(point){\r\n                                    if (point) {\r\n                                        _this.map.centerAndZoom(point, 12);\r\n\r\n                                    }else{\r\n                                        alert(\"您选择地址没有解析到结果!\");\r\n                                    }\r\n                                });\r\n                            }\r\n                        })\r\n                    }\r\n                });\r\n            })\r\n\r\n\r\n        },\r\n        to:function(point){\r\n            this.map.panTo(new BMap.Point(point.x,point.y));\r\n        },\r\n        addCityList:function(){\r\n            var size = new BMap.Size(10, 20);\r\n            var _this = this;\r\n            this.map.addControl(new BMap.CityListControl({\r\n                anchor: BMAP_ANCHOR_TOP_LEFT,\r\n                offset:size,\r\n                //切换城市之间事件\r\n                onChangeBefore: function(){\r\n                    //alert('before');\r\n                },\r\n                //切换城市之后事件\r\n                onChangeAfter:function(){\r\n                    //alert('after');\r\n                    console.log('after select city')\r\n                    _this.addMarks();\r\n                }\r\n            }));\r\n        },\r\n        /**\r\n         * @description 异步载入百度地图\r\n         */\r\n        _loadBDMap: function() {\r\n            var script = document.createElement(\"script\");\r\n            script.type = \"text/javascript\";\r\n            script.src = \"http://api.map.baidu.com/api?v=2.0&ak=1b010415afbe080fcca3807108847acc&callback=MapCallback\";\r\n            document.body.appendChild(script);\r\n        },\r\n\r\n        /**\r\n         * @description 设置地图回调函数\r\n         */\r\n        _initBDMapCallBack: function() {\r\n            var _this = this;\r\n            window.MapCallback = function() {\r\n                _this.render();\r\n\r\n                API.getMapData();\r\n            }\r\n        }\r\n    });\r\n    var map = null;\r\n\r\n\r\n    return {\r\n        init:function(pageType){\r\n            if(map){\r\n                delete map;\r\n                map = null;\r\n            }\r\n            map = new widgetMap();\r\n            stationInfoDialog.init();\r\n            API.getLinkingStationNum();\r\n            return this;\r\n        }\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./libs/jquery.min.js */ \"./libs/jquery.min.js\")))\n\n//# sourceURL=webpack:///./js/map.js?");

/***/ })

}]);