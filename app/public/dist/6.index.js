(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[6],{

/***/ "./js/blocks/stationSelector.js":
/*!**************************************!*\
  !*** ./js/blocks/stationSelector.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__,__webpack_require__(/*! api */ \"./js/api.js\"),__webpack_require__(/*! backbone */ \"./libs/backbone-min.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(require,API,Backbone){\n    var zTree,\n        setting = {\n            source: function( request, response ) {\n                API.getStationSlectorList({q:request.term});\n                Backbone.Events.on(\"stationSelectorList:get\",function(ret){\n                    if(ret && ret.list){\n                        var stations=[];\n                        $.each(ret.list,function(id,name){\n                            stations.push({\n                                label:name,\n                                value:id\n                            })\n                        })\n                    }\n                    response(stations);\n                });\n            },\n            minLength:1\n        },\n        _autocomplete;\n\n    return {\n        init:function(option){\n            option = option||{};\n            return _autocomplete = $(option.ipt_id||'#stationSelector').autocomplete($.extend(setting,option.extOption||{}));\n        },\n        destroy:function(){\n            _autocomplete.autocomplete('destroy');\n        }\n    }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./libs/jquery.min.js */ \"./libs/jquery.min.js\")))\n\n//# sourceURL=webpack:///./js/blocks/stationSelector.js?");

/***/ }),

/***/ "./js/dialog-resolveCaution.js":
/*!*************************************!*\
  !*** ./js/dialog-resolveCaution.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function($) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__,__webpack_require__(/*! api */ \"./js/api.js\"),__webpack_require__(/*! common */ \"./js/common.js\"),__webpack_require__(/*! blocks/stationSelector */ \"./js/blocks/stationSelector.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(require,API,common,stationSelector){\r\n    var view = null,\r\n        config = {\r\n            extobj : {\r\n                data:null,\r\n                listPlugin:[],\r\n                el:'#ResolveCautionTpl-dialog',\r\n                events:{\r\n                    \"click .submit-btn.sdone\":\"onsubmit\",\r\n                    \"click .submit-btn.ignore\":\"onignore\",\r\n                    \"click .cancel-btn\":\"oncancel\"\r\n                },\r\n                initialize:function(data){\r\n                    var _this = this;\r\n                    // _this.listenTo(Backbone.Events,\"bmsInfo:get\",function(data){\r\n                    //     _this.data = data;\r\n                    //     _this.setValue();\r\n                    // });\r\n                    _this.listenTo(Backbone.Events,\"caution:resolved\",function(){\r\n                        _this.showErrTips('处理完成');\r\n                        Backbone.Events.trigger(\"listdata:refresh\", \"caution\");\r\n                        _this.oncancel();\r\n                        // Backbone.Events.trigger(\"listdata:refresh\", \"batteryInfo\");\r\n                    });\r\n                    _this.listenTo(Backbone.Events,\"caution:resolved:fail\",function(data){\r\n                        _this.showErrTips(data.response.message);\r\n                        // Backbone.Events.trigger(\"listdata:refresh\", \"caution\");\r\n                        // _this.oncancel();\r\n                        // Backbone.Events.trigger(\"listdata:refresh\", \"batteryInfo\");\r\n                    });\r\n                },\r\n                setValue:function(){\r\n                    if(this.data){\r\n                        common.setFormValue(this.el,this.data);\r\n                    }\r\n                },\r\n                getParam:function(){\r\n                    return common.getFormValue(this.el,true);\r\n                },\r\n                showErrTips:function(tips){\r\n                    alert(tips);\r\n                    return false;\r\n                },\r\n                validate:function(param){\r\n                    var isvalidate = true;\r\n                    $mastFills = $(\".mast-fill\",this.el);\r\n\r\n                    $mastFills.each(function(i,mf){\r\n                        var key = $(mf).attr(\"for\"),title;\r\n                        if(typeof param[key] == \"undefined\" || !param[key]){\r\n                            title = $(mf).parent().html().replace(/<i[^>]*>.*(?=<\\/i>)<\\/i>/gi,'');\r\n                            alert(title+\"为必填项\");\r\n                            isvalidate = false;\r\n                            return false;\r\n                        }\r\n                    })\r\n\r\n                    return isvalidate;\r\n                },\r\n                onsubmit:function(){\r\n                    var _this = this,\r\n                        _param = _this.getParam();\r\n\r\n                    if(_this.validate(_param)){\r\n                        API.resolveCaution({\r\n                            \"id\":_param.id,\r\n                            \"markup\":_param.markup,\r\n                            \"contact\":_param.contact,\r\n                            \"stauts\":1,\r\n                            \"sn_key\":_param.sn_key,\r\n                            \"code\":_param.code,\r\n                            \"type\":_param.type\r\n                        });\r\n                    }\r\n                },\r\n                onignore:function(){\r\n                    var _this = this,\r\n                        _param = _this.getParam();\r\n\r\n                    // if(_this.validate(_param)){\r\n                        API.resolveCaution({\r\n                            \"id\":_param.id,\r\n                            \"markup\":_param.markup,\r\n                            \"contact\":\"\",\r\n                            \"status\":2,\r\n                            \"sn_key\":_param.sn_key,\r\n                            \"code\":_param.code,\r\n                            \"type\":_param.type,\r\n                        });\r\n                    // }\r\n                },\r\n                oncancel:function(){\r\n                    this.stopListening();\r\n                    this.dialogObj.dialog( \"destroy\" );\r\n                    $(\".ui-dialog,.ui-widget-overlay\").remove();\r\n                }\r\n            }\r\n        },\r\n        stationList;\r\n    return {\r\n        show:function(data){\r\n            var $dialogWrap = $(\"#ResolveCautionTpl-dialog\").length?$(\"#ResolveCautionTpl-dialog\").replaceWith($($(\"#ResolveCautionTpl\").html())):$($(\"#ResolveCautionTpl\").html());\r\n\r\n            $dialogWrap.dialog({\r\n                modal:true,\r\n                show:300,\r\n                height:400,\r\n                width:600,\r\n                title:data.realtime === true ? \"忽略警情\":\"警情处理\",\r\n                close:function(evt,ui){\r\n                    view.oncancel();\r\n                },\r\n                open:function(){\r\n                    $(\"form.jqtransform\").jqTransform();\r\n                    view = new (Backbone.View.extend(config.extobj))();\r\n                    view.dialogObj = $(this);\r\n                    console.log(data);\r\n                    if(data){\r\n                        $(\"[key=id]\",$dialogWrap).val(data.id);\r\n                        $(\"[key=code]\",$dialogWrap).val(data.code);\r\n                        $(\"[key=sn_key]\",$dialogWrap).val(data.sn_key);\r\n                        $(\"[key=type]\",$dialogWrap).val(data.type);\r\n                        $(\"#suggestion\",$dialogWrap).html(data.suggestion);\r\n                        $(\"#desc\",$dialogWrap).html(data.desc);\r\n                    }\r\n                    if(data.realtime === true){\r\n                      $(\".sdone\", $dialogWrap).hide()\r\n                    }else{\r\n                      $(\".ignoreTips\", $dialogWrap).hide();\r\n                      $(\".ignore\", $dialogWrap).hide()\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        detroy:function(){\r\n            view.oncancel();\r\n        }\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./libs/jquery.min.js */ \"./libs/jquery.min.js\")))\n\n//# sourceURL=webpack:///./js/dialog-resolveCaution.js?");

/***/ })

}]);